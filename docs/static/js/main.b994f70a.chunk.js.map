{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"qMAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EAGXC,mBAAS,IAHE,mBAGxCC,EAHwC,KAG5BC,EAH4B,KAc/C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAKd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAdc,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,Y,uBCR/CG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAKA,KCHJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAG1B,CAACpB,IAEGqB,EDduBK,CAAa1B,GAA/Ba,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAsChB,GAEnDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,aAGPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEWjBkB,EA1BM,WAAO,IAAD,EAGa1C,mBAAS,CAAC,cAHvB,mBAGhB2C,EAHgB,KAGJ5C,EAHI,KAKvB,OACI,oCACA,4CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAEA,4BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACG2B,IAAK3B,EACLA,SAAUA,UCfxB8B,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OAAQ,kBAAC,EAAD,MAAmBJ,I","file":"static/js/main.b994f70a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories }) => {\r\n\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => setInputValue(e.target.value);\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=8pOqLggqhrVaZ1jYW8DCzoNsiJO0XPQ9`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading}= useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n          \r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                { \r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key={img.id} \r\n                            {...img}\r\n                        />\r\n                    )) \r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                    setState({\r\n                        data:imgs,\r\n                        loading: false\r\n                    });\r\n            })\r\n    }, [category]);\r\n\r\n    return state; // { data: [], loading: true};\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories = { setCategories } />\r\n        <hr/>\r\n   \r\n        <ol>\r\n           {\r\n                categories.map(category => (\r\n                 <GifGrid \r\n                    key={category}\r\n                    category={category} \r\n                 />\r\n                ))\r\n           } \r\n        </ol>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default GifExpertApp;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render( <GifExpertApp /> , divRoot);\n"],"sourceRoot":""}